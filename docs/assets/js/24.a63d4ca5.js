(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{330:function(t,a,s){t.exports=s.p+"assets/img/lifecycle.275d2297.jpg"},331:function(t,a,s){t.exports=s.p+"assets/img/lifecycle2.e5eb9a4c.jpg"},332:function(t,a,s){t.exports=s.p+"assets/img/lifecycle3.79bdbf3c.png"},494:function(t,a,s){"use strict";s.r(a);var e=s(28),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("div",{staticStyle:{display:"flex","flex-direction":"row","align-items":"center"}},[e("div",{staticStyle:{flex:"1"}},[e("p",[e("img",{attrs:{src:s(330)}})]),t._v(" "),e("p",{staticStyle:{"text-align":"center"}},[t._v("React16. 之前")])]),t._v(" "),e("div",{staticStyle:{flex:"1"}},[e("p",[e("img",{attrs:{src:s(331)}})]),t._v(" "),e("p",{staticStyle:{"text-align":"center"}},[t._v("React16.3")])])]),t._v(" "),e("h2",{attrs:{id:"新的周期展示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新的周期展示"}},[t._v("#")]),t._v(" 新的周期展示")]),t._v(" "),e("p",[e("img",{attrs:{src:s(332),alt:"新的周期展示"}}),t._v(" "),e("a",{attrs:{href:"http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/",target:"_blank",rel:"noopener noreferrer"}},[t._v("交互式展示"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("组件的运行过程中，存在不同的阶段。React 为这些阶段提供了钩子方法，允许开发者自定义每个阶段自动执行的函数。这些方法统称为"),e("strong",[t._v("生命周期方法（lifecycle methods）")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"三个阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三个阶段"}},[t._v("#")]),t._v(" 三个阶段")]),t._v(" "),e("ul",[e("li",[t._v("Mounting：初始化阶段")]),t._v(" "),e("li",[t._v("Updating：重新渲染阶段")]),t._v(" "),e("li",[t._v("umounting：销毁阶段")])]),t._v(" "),e("h2",{attrs:{id:"生命周期概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期概述"}},[t._v("#")]),t._v(" 生命周期概述")]),t._v(" "),e("h3",{attrs:{id:"初始化（在组件初始化阶段会执行）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化（在组件初始化阶段会执行）"}},[t._v("#")]),t._v(" 初始化（在组件初始化阶段会执行）")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("constructor")])]),t._v(" "),e("li",[e("code",[t._v("static getDerivedStateFromProps()")])]),t._v(" "),e("li",[e("code",[t._v("componentWillMount() / UNSAFE_componentWillMount()")])]),t._v(" "),e("li",[e("code",[t._v("render()")])]),t._v(" "),e("li",[e("code",[t._v("componentDidMount()")])])]),t._v(" "),e("h3",{attrs:{id:"更新阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新阶段"}},[t._v("#")]),t._v(" 更新阶段")]),t._v(" "),e("p",[t._v("props或state的改变可能会引起组件的更新，组件重新渲染的过程中会调用以下方法")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("componentWillReceiveProps() / UNSAFE_componentWillReceiveProps()")])]),t._v(" "),e("li",[e("code",[t._v("static getDerivedStateFromProps()")])]),t._v(" "),e("li",[e("code",[t._v("shouldComponentUpdate()")])]),t._v(" "),e("li",[e("code",[t._v("componentWillUpdate() / UNSAFE_componentWillUpdate()")])]),t._v(" "),e("li",[e("code",[t._v("render()")])]),t._v(" "),e("li",[e("code",[t._v("getSnapshotBeforeUpdate()")])]),t._v(" "),e("li",[e("code",[t._v("componentDidUpdate()")])])]),t._v(" "),e("h3",{attrs:{id:"卸载阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载阶段"}},[t._v("#")]),t._v(" 卸载阶段")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("componentWillUnmount()")])])]),t._v(" "),e("h3",{attrs:{id:"错误处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("componentDidCatch()")])])]),t._v(" "),e("h2",{attrs:{id:"生命周期详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期详解"}},[t._v("#")]),t._v(" 生命周期详解")]),t._v(" "),e("h3",{attrs:{id:"constructor-props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#constructor-props"}},[t._v("#")]),t._v(" constructor(props)")]),t._v(" "),e("p",[t._v("构造函数在挂载之前被调用。在实现 "),e("code",[t._v("React.Component")]),t._v(" 构造函数时，需要先在添加其他内容前，调用 "),e("code",[t._v("super(props)")]),t._v("，用来将父组件传来的 "),e("code",[t._v("props")]),t._v(" 绑定到这个类中，使用 "),e("code",[t._v("this.props")]),t._v(" 将会得到。")]),t._v(" "),e("p",[t._v("官方建议不要在 "),e("code",[t._v("constructor")]),t._v(" 引入任何具有"),e("strong",[t._v("副作用和订阅功能")]),t._v("的代码，这些应当在 "),e("code",[t._v("componentDidMount()")]),t._v(" 中写入。")]),t._v(" "),e("p",[e("code",[t._v("constructor")]),t._v(" 中应当做些初始化的动作，如："),e("strong",[t._v("初始化state")]),t._v("，唯一一个直接修改state的地方。将事件处理函数绑定到类实例上，但也不要使用 "),e("code",[t._v("setState()")]),t._v("。"),e("strong",[t._v("如果没有必要初始化state或绑定方法，则不需要构造constructor，或者把这个组件换成纯函数写法")]),t._v("。")]),t._v(" "),e("p",[t._v("当然也可以利用props初始化state，在之后修改state不会对props造成任何修改，但仍然建议大家提升状态到父组件中，或使用redux统一进行状态管理。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    color"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initialColor\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"static-defaultprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#static-defaultprops"}},[t._v("#")]),t._v(" static defaultProps = {}")]),t._v(" "),e("p",[t._v("设置默认的 "),e("code",[t._v("props")]),t._v(" 值，调用一次并缓存")]),t._v(" "),e("h3",{attrs:{id:"static-getderivedstatefromprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#static-getderivedstatefromprops"}},[t._v("#")]),t._v(" static getDerivedStateFromProps()")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("getDerivedStateFromProps")]),t._v(" 在组件实例化后，和接受新的 "),e("code",[t._v("props")]),t._v(" 后被调用。他返回一个对象来更新状态，或者返回 "),e("code",[t._v("null")]),t._v(" 表示 "),e("code",[t._v("新的 props")]),t._v(" 不需要任何 "),e("code",[t._v("state")]),t._v(" 的更新。")]),t._v(" "),e("li",[t._v("如果是由于父组件的 "),e("code",[t._v("props")]),t._v(" 更改，所带来的重新渲染，也会触发此方法。")]),t._v(" "),e("li",[t._v("尽量不使用，维护俩者状态需要消耗额外资源，增加复杂度")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentId ！"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" nextProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itemId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            currentId"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nextProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itemId\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"componentwillmount-unsafe-componentwillmount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentwillmount-unsafe-componentwillmount"}},[t._v("#")]),t._v(" componentWillMount()/UNSAFE_componentWillMount()")]),t._v(" "),e("p",[e("code",[t._v("componentWillMount()")]),t._v("将在react未来版本中被弃用。"),e("code",[t._v("UNSAFE_componentWillMount()")]),t._v("在组件挂载前被调用，在这个方法中调用"),e("code",[t._v("setState()")]),t._v("不会起作用，是由于他在"),e("code",[t._v("render()")]),t._v("前被调用。")]),t._v(" "),e("p",[t._v("为了避免副作用和其他的订阅，官方都建议使用"),e("code",[t._v("componentDidMount()")]),t._v("代替。这个方法是用于在服务器渲染上的唯一方法。")]),t._v(" "),e("h3",{attrs:{id:"render"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" render()")]),t._v(" "),e("p",[e("code",[t._v("render()")]),t._v("方法是必需的。初始化的关键环节，此时创建虚拟DOM，并进行 diff 算法，重新渲染 DOM树。当他被调用时，他将计算"),e("code",[t._v("this.props")]),t._v("和"),e("code",[t._v("this.state")]),t._v("，并返回以下一种类型：")]),t._v(" "),e("ul",[e("li",[t._v("React元素。通过jsx创建，既可以是dom元素，也可以是用户自定义的组件。")]),t._v(" "),e("li",[t._v("字符串或数字。他们将会以文本节点形式渲染到dom中。")]),t._v(" "),e("li",[t._v("Portals。react 16版本中提出的新的解决方案，可以使组件脱离父组件层级直接挂载在DOM树的任何位置。")]),t._v(" "),e("li",[e("code",[t._v("null")]),t._v("，什么也不渲染")]),t._v(" "),e("li",[t._v("布尔值。也是什么都不渲染，通常后跟组件进行判断。")])]),t._v(" "),e("p",[t._v("当返回"),e("code",[t._v("null")]),t._v(","),e("code",[t._v("false")]),t._v(","),e("code",[t._v("ReactDOM.findDOMNode(this)")]),t._v("将会返回null，什么都不会渲染。")]),t._v(" "),e("p",[e("code",[t._v("render()")]),t._v("方法必须是一个纯函数，他不应该改变"),e("code",[t._v("state")]),t._v("，也不能直接和浏览器进行交互，应该将事件放在其他生命周期函数中。\n如果"),e("code",[t._v("shouldComponentUpdate()")]),t._v("返回"),e("code",[t._v("false")]),t._v("，"),e("code",[t._v("render()")]),t._v("不会被调用。")]),t._v(" "),e("h4",{attrs:{id:"fragments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fragments"}},[t._v("#")]),t._v(" Fragments")]),t._v(" "),e("p",[t._v("你也可以在"),e("code",[t._v("render()")]),t._v("中使用数组，如：("),e("em",[t._v("不要忘记给每个数组元素添加key，防止出现警告")]),t._v(")")]),t._v(" "),e("div",{staticClass:"language-jsx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("A"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("First item")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("B"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Second item")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("C"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Third item")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("换一种写法，可以不写key（v16++）")]),t._v(" "),e("div",{staticClass:"language-jsx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Fragment")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("First item")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Second item")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Third item")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Fragment")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"componentdidmount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentdidmount"}},[t._v("#")]),t._v(" componentDidMount()")]),t._v(" "),e("p",[t._v("还记得上面那个 "),e("code",[t._v("componentWillMount()")]),t._v(" 将要装载吗？这里已经装载完成了，在 "),e("code",[t._v("render()")]),t._v(" 之后调用，并且强调是在所有的子组件都 "),e("code",[t._v("render")]),t._v(" 完之后才调用。如果你想和其他JavaScript框架一起使用，可以在这个方法中调用 "),e("strong",[t._v("setTimeout, setInterval或者发送AJAX请求")]),t._v("等操作(防止异步操作阻塞UI)。")]),t._v(" "),e("h3",{attrs:{id:"componentwillreceiveprops-nextprops-unsafe-componentwillreceiveprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentwillreceiveprops-nextprops-unsafe-componentwillreceiveprops"}},[t._v("#")]),t._v(" componentWillReceiveProps(nextProps)/UNSAFE_componentWillReceiveProps()")]),t._v(" "),e("p",[t._v("官方建议使用"),e("code",[t._v("getDerivedStateFromProps")]),t._v("函数代替"),e("code",[t._v("componentWillReceiveProps()")]),t._v("。当组件挂载后，接收到新的"),e("code",[t._v("props")]),t._v("后会被调用。如果需要更新"),e("code",[t._v("state")]),t._v("来响应"),e("code",[t._v("props")]),t._v("的更改，则可以进行"),e("code",[t._v("this.props")]),t._v("和"),e("code",[t._v("nextProps")]),t._v("的比较，并在此方法中使用"),e("code",[t._v("this.setState()")]),t._v("。")]),t._v(" "),e("p",[t._v("如果父组件会让这个组件重新渲染，即使"),e("code",[t._v("props")]),t._v("没有改变，也会调用这个方法。")]),t._v(" "),e("p",[t._v("react不会在组件初始化props时调用这个方法。调用"),e("code",[t._v("this.setState")]),t._v("也不会触发。")]),t._v(" "),e("h3",{attrs:{id:"shouldcomponentupdate-nextprops-nextstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate-nextprops-nextstate"}},[t._v("#")]),t._v(" shouldComponentUpdate(nextProps, nextState)")]),t._v(" "),e("p",[t._v("调用"),e("code",[t._v("shouldComponentUpdate")]),t._v("使react知道，组件的输出是否受"),e("code",[t._v("state")]),t._v("和"),e("code",[t._v("props")]),t._v("的影响。默认每个状态的更改都会重新渲染，大多数情况下应该保持这个默认行为。")]),t._v(" "),e("p",[t._v("在渲染新的"),e("code",[t._v("props")]),t._v("或"),e("code",[t._v("state")]),t._v("前，"),e("code",[t._v("shouldComponentUpdate")]),t._v("会被调用。默认为"),e("code",[t._v("true")]),t._v("。这个方法不会在初始化时被调用，也不会在"),e("code",[t._v("forceUpdate()")]),t._v("时被调用。返回"),e("code",[t._v("false")]),t._v("不会阻止子组件在"),e("code",[t._v("state")]),t._v("更改时重新渲染。")]),t._v(" "),e("p",[t._v("如果"),e("code",[t._v("shouldComponentUpdate()")]),t._v("返回"),e("code",[t._v("false")]),t._v("，"),e("code",[t._v("componentwillupdate")]),t._v("、"),e("code",[t._v("render")]),t._v("和"),e("code",[t._v("componentDidUpdate")]),t._v("不会被调用。")]),t._v(" "),e("blockquote",[e("p",[t._v("在未来版本，shouldComponentUpdate()将会作为一个提示而不是严格的指令，返回false仍然可能导致组件的重新渲染。")])]),t._v(" "),e("p",[t._v("官方并不建议在"),e("code",[t._v("shouldComponentUpdate()")]),t._v("中进行深度查询或使用"),e("code",[t._v("JSON.stringify()")]),t._v("，他效率非常低，并且损伤性能。")]),t._v(" "),e("h3",{attrs:{id:"unsafe-componentwillupdate-nextprops-nextstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unsafe-componentwillupdate-nextprops-nextstate"}},[t._v("#")]),t._v(" UNSAFE_componentWillUpdate(nextProps, nextState)")]),t._v(" "),e("p",[t._v("在渲染新的"),e("code",[t._v("state")]),t._v("或"),e("code",[t._v("props")]),t._v("时，"),e("code",[t._v("UNSAFE_componentWillUpdate")]),t._v("会被调用，将此作为在更新发生之前进行准备的机会。这个方法不会在初始化时被调用。")]),t._v(" "),e("p",[e("em",[t._v("不能在这里使用this.setState()")]),t._v("，也不能做会触发视图更新的操作。如果需要更新"),e("code",[t._v("state")]),t._v("或"),e("code",[t._v("props")]),t._v("，调用"),e("code",[t._v("getDerivedStateFromProps")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"getsnapshotbeforeupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getsnapshotbeforeupdate"}},[t._v("#")]),t._v(" getSnapshotBeforeUpdate()")]),t._v(" "),e("p",[t._v("在react "),e("code",[t._v("render()")]),t._v("后的输出被渲染到DOM之前被调用。它使您的组件能够在它们被潜在更改之前捕获当前值（如滚动位置）。这个生命周期返回的任何值都将作为参数传递给componentDidUpdate（）。")]),t._v(" "),e("h3",{attrs:{id:"componentdidupdate-prevprops-prevstate-snapshot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentdidupdate-prevprops-prevstate-snapshot"}},[t._v("#")]),t._v(" componentDidUpdate(prevProps, prevState, snapshot)")]),t._v(" "),e("p",[t._v("在更新发生后立即调用"),e("code",[t._v("componentDidUpdate()")]),t._v("。此方法不用于初始渲染。当组件更新时，将此作为一个机会来操作DOM。只要您将当前的props与以前的props进行比较（例如，如果props没有改变，则可能不需要网络请求），这也是做网络请求的好地方。")]),t._v(" "),e("p",[t._v("如果组件实现"),e("code",[t._v("getSnapshotBeforeUpdate()")]),t._v("生命周期，则它返回的值将作为第三个“快照”参数传递给"),e("code",[t._v("componentDidUpdate()")]),t._v("。否则，这个参数是"),e("code",[t._v("undefined")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"componentwillunmount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentwillunmount"}},[t._v("#")]),t._v(" componentWillUnmount()")]),t._v(" "),e("p",[t._v("在组件被卸载并销毁之前立即被调用。在此方法中执行任何必要的清理，例如使定时器无效，取消网络请求或清理在componentDidMount（）中创建的任何监听。")]),t._v(" "),e("h3",{attrs:{id:"componentdidcatch-error-info"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentdidcatch-error-info"}},[t._v("#")]),t._v(" componentDidCatch(error, info)")]),t._v(" "),e("p",[t._v("错误边界是React组件，可以在其子组件树中的任何位置捕获JavaScript错误，记录这些错误并显示回退UI，而不是崩溃的组件树。错误边界在渲染期间，生命周期方法以及整个树下的构造函数中捕获错误。")]),t._v(" "),e("p",[t._v("如果类组件定义了此生命周期方法，则它将成为错误边界。在它中调用 "),e("code",[t._v("setState()")]),t._v(" 可以让你在下面的树中捕获未处理的JavaScript错误，并显示一个后备UI。只能使用错误边界从意外异常中恢复;不要试图将它们用于控制流程。"),e("a",{attrs:{href:"https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("错误边界只会捕获树中下面组件中的错误。错误边界本身不能捕获错误。")]),t._v(" "),e("h2",{attrs:{id:"常用生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用生命周期"}},[t._v("#")]),t._v(" 常用生命周期")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("componentDidMount()")]),t._v(" 会在组件挂载后自动调用；")]),t._v(" "),e("li",[e("code",[t._v("componentDidUpdate()")]),t._v(" 会在 UI 每次更新后调用（即组件挂载成功以后，每次调用 "),e("code",[t._v("render")]),t._v(" 方法，都会触发这个方法）；")]),t._v(" "),e("li",[e("code",[t._v("componentWillUnmount()")]),t._v(" 会在组件卸载前自动调用")])])])}),[],!1,null,null,null);a.default=n.exports}}]);